# Backend production environment example for Vendora-Unified
# Copy to backend/.env.prod and fill values. Do NOT commit the actual .env files.

# Core Django
SECRET_KEY=replace-with-strong-random-secret
DEBUG=False
ALLOWED_HOSTS=yourdomain.com
CSRF_TRUSTED_ORIGINS=https://yourdomain.com

# Database (Neon) â€” use the connection string from Neon project (use pooled, password auth)
# Example: postgres://<user>:<password>@<host>.neon.tech:5432/<db>?sslmode=require
DATABASE_URL=postgres://USER:PASSWORD@HOST.neon.tech:5432/DBNAME?sslmode=require

# CORS / Frontend
CORS_ALLOW_ALL_ORIGINS=False
CORS_ALLOWED_ORIGINS=https://yourdomain.com
FRONTEND_URL=https://yourdomain.com

# Email (configure SMTP in production)
# For SMTP set:
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# Common providers:
#  - Gmail: EMAIL_HOST=smtp.gmail.com, EMAIL_PORT=587, EMAIL_USE_TLS=True (use App Password)
#  - SendGrid: EMAIL_HOST=smtp.sendgrid.net, EMAIL_PORT=587, EMAIL_USE_TLS=True, EMAIL_HOST_USER=apikey, EMAIL_HOST_PASSWORD=<API Key>
#  - Mailgun: EMAIL_HOST=smtp.mailgun.org, EMAIL_PORT=587, EMAIL_USE_TLS=True
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
DEFAULT_FROM_EMAIL=noreply@yourdomain.com
EMAIL_HOST=
EMAIL_PORT=587
EMAIL_HOST_USER=
EMAIL_HOST_PASSWORD=
EMAIL_USE_TLS=True
EMAIL_USE_SSL=False
EMAIL_TIMEOUT=10

# Web Push (VAPID)
VAPID_PUBLIC_KEY=
VAPID_PRIVATE_KEY=
VAPID_EMAIL=admin@yourdomain.com

# Telegram Bot
TELEGRAM_BOT_TOKEN=
TELEGRAM_BOT_USERNAME=VendoraBot
TELEGRAM_CHAT_ID=
TELEGRAM_WEBHOOK_URL=https://yourdomain.com/api/telegram/webhook/
TELEGRAM_WEBHOOK_SECRET=change-this-shared-secret

# Orders
ORDER_AUTO_EXPIRE_MINUTES=30

# Security headers
SECURE_SSL_REDIRECT=True
SECURE_HSTS_SECONDS=31536000

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: vendora
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install backend deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Migrate
        working-directory: backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/vendora
          SECRET_KEY: test
        run: |
          python manage.py migrate --noinput
      - name: Run backend tests
        working-directory: backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/vendora
          SECRET_KEY: test
        run: |
          pytest -q
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci || npm install
      - name: Build frontend
        working-directory: frontend
        run: npm run build
      - name: Archive production build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist